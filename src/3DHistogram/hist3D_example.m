%% Description
% This file is an example of using either function_hist3D_xyz or
% function_hist3D_sph for visualizing the disributions of orientations in
% 3D space.
close all; clc;

%% Randomly generate data (biased of points that lie on N/S poles)
num_rands = 250; % lower numbers for better visuals, otherwise plots tend to adopt specific shape

% simulate random 3D orientaitons usign spherical coordinates [theta values, phi values]
th = 2*pi*rand(num_rands,1);
phi = pi*rand(num_rands,1)-pi/2;

%% Static Plotting examples
fig{1} = function_hist3D_sph(th, phi); % basic usage: icosahedron with one subdivision

fig{2} = function_hist3D_sph(th, phi,...
    'Representation', 'cube'); % cube

fig{3} = function_hist3D_sph(th, phi,...
    'Representation', 'icosahedron'); % icosahedron

fig{4} = function_hist3D_sph(th, phi,...
    'Representation', 'dodecahedron'); % dodecahedron

% Colored faces
[fig{5},bin_data] = function_hist3D_sph(th, phi,...
    'Representation', 'icosahedron',...
    'Subdivision', 2,...
    'ColorFaces', true); % note bin_data contains data for each bin

fig{6} = function_hist3D_sph(th, phi,...
    'Representation', 'icosahedron',...
    'Subdivision', 2,...
    'ColorFaces', true); 
colormap(jet); c = colorbar; c.Label.String = 'Normalized Counts'; % can update colors after plotting

% Plot methods
fig{7} = function_hist3D_sph(th, phi,...
    'Representation', 'icosahedron',...
    'Subdivision', 2,...
    'ColorFaces', true, ...
    'PlotMethod', 'extrusion', ... % default, (above is 
    'BaseLine', 0.4); % baseline modifies origin location (0 = origin)

fig{8} = function_hist3D_sph(th, phi,...
    'Representation', 'icosahedron',...
    'Subdivision', 2,...
    'PlotMethod', 'lines'); % not pretty

% show lines
fig{9} = function_hist3D_sph(th, phi,...
    'Representation', 'icosahedron',...
    'Subdivision', 2,...
    'ColorFaces', true,...
    'ShowLines', true); % to see where vectors lie within bin

% face verification
[~,idx] = max(bin_data(:,2)); most_frequent_direction = bin_data(idx,1); % using bin from earlier plot
fig{10} = function_hist3D_sph(th, phi,...
    'Representation', 'icosahedron',...
    'Subdivision', 2,...
    'ColorFaces', true, ...
    'showlines', true, ... % required for facver
    'facever', most_frequent_direction); % to see where group of vectors lie

% filtering
fig{11} = function_hist3D_sph(th, phi,...
    'Representation', 'icosahedron',...
    'Subdivision', 2,...
    'ColorFaces', true,...
    'FilterFrequency', 0.5); % anything > 0.5 frequency is removed

%% Movie Plotting Examples
[fig{12}, data, center_vertex, frames] = function_hist3D_sph(th, phi,...
    'Representation', 'icosahedron',...
    'Subdivision', 2,...
    'FilterFrequency', 1.1, ...
    'ColorFaces', true, ...
    'PlotMethod', 'expansion', ...
    'showlines', false, ...
    'facever', [1], ...
    'baseline', 1, ... % default = 0
    'ProduceVideo', true);

% save frames as video
v = VideoWriter('saved_3d_histogram.avi');
v.FrameRate = 20; v.Quality = 75;
open(v);
for n = 1:length(frames)
    writeVideo(v, frames{n});
end
close(v);

%% Spread Figs on Screen (ignore this)
gr_root = groot;
sqr_spread = ceil(sqrt(length(fig)));
spread_fct = 1.01;
x_div = gr_root.ScreenSize(3)/sqr_spread/spread_fct;
y_div = gr_root.ScreenSize(4)/sqr_spread/spread_fct;
for n = 1:length(fig)
% 	floor(length(fig)/n)
    pos = [x_div*(mod(n,sqr_spread))+1, y_div*(floor((n-1)/sqr_spread))+1, x_div, y_div];
    fig{n}.Position = pos;
    figure(fig{n})
end
