2020-05-20-16-08-33_e03_cln3_ci0_grains_only_ebsd_seg
% segmentation and EBSD data
seg_map_fn = 'avg_interpol_seg1.tiff'; % This segmentation determines um_per_pix
ebsd_text_fn = 'DF-NMC-CF-01-e_03_Cleaned_All data.txt';

% scaling
scale = 1; % length scale - smaller scales = faster processing
um_per_pix = 1/(144-18); % pixel scaling, here for IPF map of 1031 x 1024

% Segmentation to extract these values 
boundary_lbls = []; % green region, use 9,13,23,45 for 1/8, 1/4, 1/2, 1 scale respectively
bckgrd_lbls = [1]; %  red region
remove_lbls = [3, 14, 9, 12, 22, 25, 617, 678]; % remove grains outside secondary particle
A_thresh_um = 0.016; % [=] um^2, threshold for what is considered a grain
CI_thres = -0.01; % 1-CI_thresh is confidence interval, if < 0 all data used
mult_secondary_ptcs = false; % if secondary particles in segmentation map

% Cleaning
angle_threshold = 1.8; % [=] degrees
fill_grain = false; % true: N_thresh_um ignored & most common orientation fills grain
N_thresh_um = 0.01; % [=] um^2, minimum size of speckle to remove






2020-05-20-16-45-47_e03_cln3_entire_ptc_ebsd_seg
%% Inputs
% segmentation and EBSD data
seg_map_fn = 'e_03_entire_ptc.tiff'; % This segmentation determines um_per_pix
ebsd_text_fn = 'DF-NMC-CF-01-e_03_Cleaned_All data.txt';

% scaling
scale = 1; % length scale - smaller scales = faster processing
um_per_pix = 1/(144-18); % pixel scaling, here for IPF map of 1031 x 1024

% Segmentation to extract these values 
boundary_lbls = []; % green region, use 9,13,23,45 for 1/8, 1/4, 1/2, 1 scale respectively
bckgrd_lbls = [1]; %  red region
remove_lbls = []; % remove grains outside secondary particle
A_thresh_um = 0.016; % [=] um^2, threshold for what is considered a grain
CI_thres = -0.01; % 1-CI_thresh is confidence interval, if < 0 all data used
mult_secondary_ptcs = false; % if secondary particles in segmentation map

% Cleaning
angle_threshold = 1.8; % [=] degrees
fill_grain = false; % true: N_thresh_um ignored & most common orientation fills grain
N_thresh_um = 0.01; % [=] um^2, minimum size of speckle to remove

%line 48: 
seg_map = function_swap_labels(seg_map,1,2); % turn on/off add option





2020-05-20-18-00-54_e03_boundaries_ebsd_seg
%% Inputs
% segmentation and EBSD data
seg_map_fn = 'avg_interpol_seg1.tiff'; % This segmentation determines um_per_pix
ebsd_text_fn = 'DF-NMC-CF-01-e_03_Cleaned_All data.txt';

% scaling
scale = 1; % length scale - smaller scales = faster processing
um_per_pix = 1/(144-18); % pixel scaling, here for IPF map of 1031 x 1024

% swapping and focus region
focus = 'boundaries'; % 'boundaries', 'grains', or all
need_swap_labels = false; % certain patterns might need swapping

% Segmentation to extract these values 
boundary_lbls = [45]; % green region, use 9,13,23,45 for 1/8, 1/4, 1/2, 1 scale respectively
bckgrd_lbls = [1]; %  red region
remove_lbls = []; % remove grains outside secondary particle
A_thresh_um = 0.016; % [=] um^2, threshold for what is considered a grain
CI_thres = -0.01; % 1-CI_thresh is confidence interval, if < 0 all data used
mult_secondary_ptcs = false; % if secondary particles in segmentation map

% Cleaning
angle_threshold = 1.8; % [=] degrees
fill_grain = false; % true: N_thresh_um ignored & most common orientation fills grain
N_thresh_um = 0.01; % [=] um^2, minimum size of speckle to remove

%% Processing
% No inputs necessary below.

%% Unit conversions
grain_props.um_per_pix = um_per_pix/scale;
A_thresh_pix = A_thresh_um/(grain_props.um_per_pix^2); % area threshold in pixels
N_thresh_pix = N_thresh_um/(grain_props.um_per_pix^2);

%% Load Image Quality Weka Segmentation and EBSD Text File
seg_map = imread(seg_map_fn); % segmentation
seg_map = imresize(seg_map, scale, 'nearest');
ebsd_text = function_import_ebsd_text(ebsd_text_fn); % EBSD txt file
function_bwshowlabels(seg_map, 'first')

if need_swap_labels
    seg_map = function_swap_labels(seg_map,1,2);
end